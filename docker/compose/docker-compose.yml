---
version: '3.7'
services:
  elasticsearch:
    image: mozdef/mozdef_elasticsearch
    build:
      context: ../../
      dockerfile: docker/compose/elasticsearch/Dockerfile
      cache_from:
        - mozdef/mozdef_elasticsearch
        - mozdef_elasticsearch:latest
    restart: always
    volumes:
      - elasticsearch:/var/lib/elasticsearch
    # ports:
    #   - 9200:9200
    networks:
      - default
  rabbitmq:
    image: mozdef/mozdef_rabbitmq
    build:
      context: ../../
      dockerfile: docker/compose/rabbitmq/Dockerfile
      cache_from:
        - mozdef/mozdef_rabbitmq
        - mozdef_rabbitmq:latest
    restart: always
    volumes:
      - rabbitmq:/var/lib/rabbitmq
    # ports:
    #   - 5672:5672
    #   - 15672:15672 # Admin interface
    networks:
      - default
  mongodb:
    image: mozdef/mozdef_mongodb
    build:
      context: ../../
      dockerfile: docker/compose/mongodb/Dockerfile
      cache_from:
        - mozdef/mozdef_mongodb
        - mozdef_mongodb:latest
    restart: always
    volumes:
      - mongodb:/var/lib/mongo
    # ports:
    #   - 3002:3002
    networks:
      - default
  kibana:
    image: mozdef/mozdef_kibana
    build:
      context: ../../
      dockerfile: docker/compose/kibana/Dockerfile
      cache_from:
        - mozdef/mozdef_kibana
        - mozdef_kibana:latest
    restart: always
    depends_on:
      - elasticsearch
    networks:
      - default
  nginx:
    image: mozdef/mozdef_nginx
    build:
      context: ../../
      dockerfile: docker/compose/nginx/Dockerfile
      cache_from:
        - mozdef/mozdef_nginx
        - mozdef_nginx:latest
    restart: always
    depends_on:
      - kibana
      - meteor
    ports:
      - 80:80
      - 8080:8080
      - 9090:9090
      # - 8081:8081
    networks:
      - default

  # MozDef Specific Containers
  base:
    image: mozdef/mozdef_base
    build:
      context: ../../
      dockerfile: docker/compose/mozdef_base/Dockerfile
      cache_from:
        - mozdef/mozdef_base
        - mozdef_base:latest
    volumes:
      - geolite_db:/opt/mozdef/envs/mozdef/data
  bootstrap:
    image: mozdef/mozdef_bootstrap
    build:
      context: ../../
      dockerfile: docker/compose/mozdef_bootstrap/Dockerfile
      cache_from:
        - mozdef/mozdef_bootstrap
        - mozdef_bootstrap:latest
    depends_on:
      - base
      - elasticsearch
    environment:
      - ES_URL=http://localhost:9200
    networks:
      - default
  alertactions:
    image: mozdef/mozdef_alertactions
    build:
      context: ../../
      dockerfile: docker/compose/mozdef_alertactions/Dockerfile
      cache_from:
        - mozdef/mozdef_alertactions
        - mozdef_alertactions:latest
    restart: always
    depends_on:
      - base
      - elasticsearch
      - rabbitmq
      - alerts
      - bootstrap
    networks:
      - default
  alerts:
    image: mozdef/mozdef_alerts
    build:
      context: ../../
      dockerfile: docker/compose/mozdef_alerts/Dockerfile
      cache_from:
        - mozdef/mozdef_alerts
        - mozdef_alerts:latest
    restart: always
    depends_on:
      - base
      - elasticsearch
      - rabbitmq
      - bootstrap
    networks:
      - default
  # bot:
  #   image: mozdef/mozdef_bot
  #   build:
  #     context: ../../
  #     dockerfile: docker/compose/mozdef_bot/Dockerfile
  #     cache_from:
  #       - mozdef/mozdef_bot
  #       - mozdef_bot:latest
  #     args:
  #       # This is either 'irc', or 'slack'
  #       BOT_TYPE: slack
  #   restart: always
  #   depends_on:
  #     - base
  #     - rabbitmq
  #     - alerts
  #     - bootstrap
  #   networks:
  #     - default
  #   volumes:
  #     - geolite_db:/opt/mozdef/envs/mozdef/data/
  cron:
    image: mozdef/mozdef_cron
    build:
      context: ../../
      dockerfile: docker/compose/mozdef_cron/Dockerfile
      cache_from:
        - mozdef/mozdef_cron
        - mozdef_cron:latest
    restart: always
    volumes:
      - cron:/opt/mozdef/envs/mozdef/cron
      - geolite_db:/opt/mozdef/envs/mozdef/data/
    depends_on:
      - base
      - rabbitmq
      - elasticsearch
      - mongodb
      - bootstrap
    networks:
      - default
  loginput:
    image: mozdef/mozdef_loginput
    build:
      context: ../../
      dockerfile: docker/compose/mozdef_loginput/Dockerfile
      cache_from:
        - mozdef/mozdef_loginput
        - mozdef_loginput:latest
    restart: always
    depends_on:
      - base
      - elasticsearch
      - rabbitmq
      - bootstrap
    networks:
      - default
  mq_worker:
    image: mozdef/mozdef_mq_worker
    build:
      context: ../../
      dockerfile: docker/compose/mozdef_mq_worker/Dockerfile
      cache_from:
        - mozdef/mozdef_mq_worker
        - mozdef_mq_worker:latest
    restart: always
    depends_on:
      - base
      - rabbitmq
      - elasticsearch
      - loginput
      - bootstrap
    networks:
      - default
    volumes:
      - geolite_db:/opt/mozdef/envs/mozdef/data/
  meteor:
    image: mozdef/mozdef_meteor
    build:
      context: ../../
      dockerfile: docker/compose/mozdef_meteor/Dockerfile
      cache_from:
        - mozdef/mozdef_meteor
        - mozdef_meteor:latest
    restart: always
    depends_on:
      - mongodb
      - rest
    networks:
      - default
  rest:
    image: mozdef/mozdef_rest
    build:
      context: ../../
      dockerfile: docker/compose/mozdef_rest/Dockerfile
      cache_from:
        - mozdef/mozdef_rest
        - mozdef_rest:latest
    restart: always
    depends_on:
      - base
      - elasticsearch
      - mongodb
      - bootstrap
    networks:
      - default
  syslog:
    image: mozdef/mozdef_syslog
    build:
      context: ../../
      dockerfile: docker/compose/mozdef_syslog/Dockerfile
      cache_from:
        - mozdef/mozdef_syslog
        - mozdef_syslog:latest
    restart: always
    depends_on:
      - loginput
    ports:
      - 514:514/udp
      - 514:514
    networks:
      - default
  tester:
    image: mozdef/mozdef_tester
    build:
      context: ../../
      dockerfile: docker/compose/tester/Dockerfile
      cache_from:
        - mozdef/mozdef_tester
        - mozdef_tester:latest
    networks:
      - default
  cognito_proxy:
    image: mozdef/mozdef_cognito_proxy
    build:
      context: ../../
      dockerfile: docker/compose/mozdef_cognito_proxy/Dockerfile
    command: bash -c 'exit 0'
    networks:
      - default
volumes:
  elasticsearch:
  rabbitmq:
  mongodb:
  cron:
  geolite_db:

networks:
  default:
