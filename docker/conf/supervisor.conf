[supervisord]
#Set true for debug or for running detached (docker -d)
nodaemon=true
autostart=true
autorestart=true

[program:rabbitmq]
priority=1
command=/etc/init.d/rabbitmq-server start

[program:elasticsearch]
priority=2
command=/opt/elasticsearch/bin/elasticsearch

#uncomment if you want mongo as a separate process
#otherwise it runs when meteor runs
#[program:mongodb]
#priority=2
#command=/usr/bin/mongod --smallfiles --dbpath /var/lib/mongodb/


[program:nginx]
priority=4
command=/usr/sbin/nginx
stdout_events_enabled=true
stderr_events_enabled=true

[program:loginput]
priority=5
command=/usr/local/bin/uwsgi
    --socket /run/uwsgi/apps/loginput.socket
    --wsgi-file index.py
    --buffer-size 32768 --master --listen 100 --uid root
    --pp /opt/MozDef/loginput
    --chmod-socket
    --logto /var/log/mozdef/uwsgi.loginput.log
user=root
group=root
directory=/opt/MozDef/loginput
umask=022

[program:rest]
priority=5
command=/usr/local/bin/uwsgi
    --socket /run/uwsgi/apps/rest.socket
    --wsgi-file index.py
    --buffer-size 32768 --master --listen 100 --uid root
    --pp /opt/MozDef/rest
    --chmod-socket
    --logto /var/log/mozdef/uwsgi.rest.log
user=root
group=root
directory=/opt/MozDef/rest
umask=022

[program:esworker]
priority=5
command=/usr/local/bin/uwsgi
    --socket /run/uwsgi/apps/esworker.socket
    --mule=esworker.py
    --mule=esworker.py
    --buffer-size 32768 --master --listen 100 --uid root
    --pp /opt/MozDef/mq
    --stats 127.0.0.1:9192
    --logto /var/log/mozdef/uwsgi.esworker.log
    --master-fifo /run/uwsgi/apps/esworker.fifo
user=root
group=root
directory=/opt/MozDef/mq
umask=022

#runs meteor and mongo
[program:meteor]
priority=6
startsecs=120
user=root
command=meteor --allow-superuser
directory=/opt/MozDef/meteor
stdout_logfile=/var/log/mozdef/meteor.log
stderr_logfile=/var/log/mozdef/meteor.log
environment=HOME="/root",USER="root"

[program:alerts]
priority=7
command=celery -A celeryconfig worker --loglevel=info --beat
user=root
group=root
environment=C_FORCE_ROOT="1"
directory=/opt/MozDef/alerts
umask=022

# Inject sample data in MozDef ES directly.
# which clears existing indexes,
# sets up fresh indexes,etc.
[program:inject]
priority=10
command=python inject.py
directory=/opt/MozDef/examples/es-docs/
startretries=10

#DEMO helper jobs
# health/status jobs to query rabbit/ES and send to mongo/meteor
[program:healthAndStatus]
priority=10
command=/opt/MozDef/examples/demo/healthjobs.sh
directory=/opt/MozDef/examples/demo/

#real time constant stream of demo events/alerts/attackers
[program:realTimeEvents]
priority=10
command=/opt/MozDef/examples/demo/sampleevents.sh
directory=/opt/MozDef/examples/demo/

#periodically sync any alerts and attackers from ES to meteor/mongo
[program:realTimeAlerts]
priority=10
command=/opt/MozDef/examples/demo/syncalerts.sh
directory=/opt/MozDef/examples/demo/


